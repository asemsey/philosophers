current to-do:
-	code algorithm (odd/even)
-	fix 1 philo (cant eat)

---------------------------------------------------------------

allowed functions:
	memset printf write
	malloc free
	usleep gettimeofday
	pthread_create pthread_join pthread_detach
	pthread_mutex_init pthread_mutex_destroy
	pthread_mutex_lock pthread_mutex_unlock

usleep(1000) == 1 millisecond
1			second
1.000		milliseconds
1.000.000	microseconds

state:		0-sleep 1-eat 2-think

---------------------------------------------------------------

for testing stuff:
	if (p->name == 2)
	{
		usleep(1000 * 1000 * 2);
		eating(p);
		usleep(1000 * 1000 * 2);
	}
	else
		usleep(1000 * 1000 * 10);


struct for array:
// typedef struct s_philo
// {
// 	t_data		*data;
// 	pthread_t	id;
// 	int			name;
// 	int			life;
// 	int			state;
// 	int			left;
// 	int			right;
// }	t_philo;